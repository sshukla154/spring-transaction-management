<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="transactionAdvice"
			pointcut="execution(* com.learning.service.impl.BankServiceImpl.transfer*(..))" />
	</aop:config>

	<tx:advice id="transactionAdvice">
		<tx:attributes>
			<tx:method name="transfer" isolation="READ_COMMITTED"
				read-only="false" propagation="REQUIRED" timeout="100"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<bean id="bankService"
		class="com.learning.service.impl.BankServiceImpl">
		<property name="bankDAO" ref="bankDAO" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>
	<bean id="bankDAO" class="com.learning.dao.impl.BankDAOImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<bean id=""
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:/database.properties</value>
			<!-- <list> <value>database.properties</value> </list> -->
		</property>

	</bean>

</beans>